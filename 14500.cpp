#include<iostream>

using namespace std;

int n, m;
int nums[500][500];
int tetro[19][4][2] = {
	{{0, 0},{0, 1},{0, 2},{0, 3}}
	,{{0, 0},{1, 0},{2, 0},{3, 0}}

	,{{0, 0},{0, 1},{1, 0},{1, 1}}

	,{{0, 0},{0, -1},{-1, -1},{-2, -1}}
	,{{0, 0},{1, 0},{1, -1},{1, -2}}
	,{{0, 0},{0, 1},{1, 1},{2, 1}}
	,{{0, 0},{-1, 0},{-1, 1},{-1, 2}}

	,{{0, 0},{-1, 0},{-1, -1},{-1, -2}}
	,{{0, 0},{0, -1},{1, -1},{2, -1}}
	,{{0, 0},{1, 0},{1, 1},{1, 2}}
	,{{0, 0},{0, 1},{-1, 1},{-2, 1}}

	,{{0, 0},{1, 0},{1, 1},{2, 1}}
	,{{0, 0},{0, 1},{-1, 1},{-1, 2}}

	,{{0, 0},{1, 0},{1, -1},{2, -1}}
	,{{0, 0},{0, 1},{1, 1},{1, 2}}

	,{{0, 0},{1, 0},{2, 0},{1, 1}}
	,{{0, 0},{0, 1},{0, 2},{-1, 1}}
	,{{0, 0},{-1, 0},{-2, 0},{-1, -1}}
	,{{0, 0},{0, -1},{0, -2},{1, -1}}
};

int findMax(int x, int y) {
	int t = 0;

	for (int i = 0; i < 19; i++) {
		int count = 0;
		for (int j = 0; j < 4; j++) {
			int nX = x + tetro[i][j][0];
			int nY = y + tetro[i][j][1];

			if (0 <= nX && nX < n && 0 <= nY && nY < m) count += nums[nX][nY];
		}
		t = max(t, count);
	}

	return t;
}

int main() {
	cin >> n >> m;

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> nums[i][j];
		}
	}

	int answer = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			answer = max(answer, findMax(i, j));
		}
	}

	cout << answer;

	return 0;
}